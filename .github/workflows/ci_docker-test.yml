name: Docker Integration Test

on:
  workflow_call:
  workflow_dispatch:

jobs:
  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker/**', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup environment
        run: |
          make env
          # „É≠„Éº„Ç´„É´DB‰ΩøÁî®Ë®≠ÂÆöÔºà„ÉÜ„Çπ„ÉàÁî®Ôºâ
          sed -i 's/POSTGRES_HOST=.*/POSTGRES_HOST=db/' .env

      - name: Start services with local DB
        run: make compose:build
        env:
          ENV: prod
          POSTGRES_HOST: db
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1

      - name: Health check with timeout
        run: |
          timeout=60
          interval=5
          elapsed=0

          while [ $elapsed -lt $timeout ]; do
            status=$(ENV=prod POSTGRES_HOST=db make compose:ps --format json | jq -rs 'map(.Health // "unknown") | join("\n")')

            if echo "$status" | grep -qiE "starting|unhealthy"; then
              echo "üïí Services starting... Elapsed: ${elapsed}s/${timeout}s"
              ENV=prod POSTGRES_HOST=db make compose:ps
              sleep $interval
              elapsed=$((elapsed + interval))
            else
              echo "‚úÖ All services healthy!"
              ENV=prod POSTGRES_HOST=db make compose:ps
              break
            fi
          done

          if [ $elapsed -ge $timeout ]; then
            echo "‚ùå Timeout: Services failed to start"
            ENV=prod POSTGRES_HOST=db make compose:ps
            ENV=prod POSTGRES_HOST=db make compose:logs
            exit 1
          fi

          echo "‚úÖ Health check passed!"

      - name: Clean up
        if: always()
        run: ENV=prod POSTGRES_HOST=db make compose:down
