name: Check services healthy

on:
  pull_request_target:
    branches:
      - main
      - develop

jobs:
  check_healthy:
    runs-on: ubuntu-latest
    if: |
      (github.event.pull_request.user.login == 'ukwhatn') ||
      (github.event.pull_request.user.login == 'dependabot[bot]')

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup environment
        run: |
          make envs:setup
          # AWS S3環境変数の設定
          sed -i 's/AWS_ACCESS_KEY_ID=your_access_key/AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"/' envs/aws-s3.env
          sed -i 's/AWS_SECRET_ACCESS_KEY=your_secret_key/AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"/' envs/aws-s3.env
          sed -i 's/S3_BUCKET=your-backup-bucket/S3_BUCKET="${{ secrets.S3_BUCKET }}"/' envs/aws-s3.env

      - name: Build and start services
        run: make up ENV=test

      - name: Wait for services to be ready
        run: |
          max_retries=5
          retry_interval=5
          
          for i in $(seq 1 $max_retries)
          do
            if ! make ps ENV=test | grep -qiE "(starting|restarting|unhealthy)"; then
              echo "All services have finished starting!"
              break
            else
              echo "Waiting for services to finish starting... (Attempt $i/$max_retries)"
              sleep $retry_interval
            fi
          
            if [ $i -eq $max_retries ]; then
              echo "Services did not finish starting within the allocated time."
              make logs:once ENV=test
              exit 1
            fi
          done
          
          if make ps ENV=test | grep -q "unhealthy"; then
            echo "Some services are unhealthy:"
            make ps ENV=test
            make logs:once ENV=test
            exit 1
          else
            echo "All services are healthy!"
            make ps ENV=test
          fi

      - name: Check Dumper service
        run: make db:dump ENV=test

      - name: Clean up
        run: make down ENV=test