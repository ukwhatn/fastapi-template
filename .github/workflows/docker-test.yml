name: Docker Integration Test

on:
  workflow_call:
  workflow_dispatch:

jobs:
  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker/**', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup environment
        run: |
          make env
          sed -i 's/S3_ACCESS_KEY=""/S3_ACCESS_KEY="${{ secrets.S3_ACCESS_KEY }}"/' envs/aws-s3.env || true
          sed -i 's/S3_SECRET_KEY=""/S3_SECRET_KEY="${{ secrets.S3_SECRET_KEY }}"/' envs/aws-s3.env || true

      - name: Start services
        run: |
          make up ENV=test
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1

      - name: Health check with timeout
        run: |
          timeout=30
          interval=5
          elapsed=0

          while [ $elapsed -lt $timeout ]; do
            if ! make ps ENV=test | grep -qiE "(starting|restarting|unhealthy)"; then
              echo "‚úÖ All services started successfully!"
              break
            fi

            echo "üïí Services starting... Elapsed: ${elapsed}s/${timeout}s"
            make ps ENV=test
            sleep $interval
            elapsed=$((elapsed + interval))
          done

          if [ $elapsed -ge $timeout ]; then
            echo "‚ùå Timeout: Services failed to start"
            make ps ENV=test
            make logs:once ENV=test
            exit 1
          fi

          if make ps ENV=test | grep -q "unhealthy"; then
            echo "‚ùå Unhealthy services detected:"
            make ps ENV=test
            make logs:once ENV=test
            exit 1
          fi

          make ps ENV=test
          echo "‚úÖ Health check passed!"

      - name: Test database dumper
        run: |
          echo "Testing database dumper service..."
          make db:dump:test ENV=test
          echo "‚úÖ Dumper test passed!"

      - name: Clean up
        if: always()
        run: make down ENV=test
