# Production environment (auto-deploy via Watchtower)
# Image from GHCR.io (latest tag)
# Database: Local (POSTGRES_HOST=db) or External (DBaaS like Supabase)
# No port exposure (use nginx + Cloudflare Proxy)
#
# Usage:
#   make prod:deploy  # Initial deployment
#   make prod:logs    # View logs
#   make prod:ps      # Check status

services:
  server:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-server-prod
    image: ghcr.io/${GITHUB_REPOSITORY:-owner/repo}:latest
    command:
      - /bin/sh
      - -c
      - |
        fastapi run app/main.py --host 0.0.0.0 --port 80 --proxy-headers
    volumes:
      - ./newrelic.ini:/etc/newrelic.ini:ro
    env_file:
      - .env
    environment:
      - ENV_MODE=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/system/healthcheck/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db-migrator:
        condition: service_completed_successfully
        required: true
    networks:
      - prod
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  db:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-db-prod
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-main}
      TZ: Asia/Tokyo
    volumes:
      - pg_data_prod:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-main}
      interval: 2s
      timeout: 5s
      retries: 30
    networks:
      - prod
    profiles:
      - local-db
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  db-migrator:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-db-migrator-prod
    image: ghcr.io/ukwhatn/psql-migrator:latest
    volumes:
      - ./versions:/app/versions
      - ./app/infrastructure/database/models:/app/migrations/models
    env_file:
      - .env
    restart: no
    depends_on:
      db:
        condition: service_healthy
        required: false
    networks:
      - prod
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  db-dumper:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-db-dumper-prod
    image: ghcr.io/ukwhatn/psql-dumper:latest
    env_file:
      - .env
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 3 * * *}
    volumes:
      - ./backups:/app/backups
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
        required: false
    networks:
      - prod
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  pg_data_prod:
    name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-pg-data-prod

networks:
  prod:
    name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-prod
    driver: bridge
