# Stg environment (auto-deploy via Watchtower)
# Image from GHCR.io (develop tag)
# Database: Local (POSTGRES_HOST=db) or External (DBaaS like Supabase)
# No port exposure (use Cloudflare Tunnels)
#
# Usage:
#   make stg:deploy  # Initial deployment
#   make stg:logs    # View logs
#   make stg:ps      # Check status

services:
  server:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-server-stg
    image: ghcr.io/${GITHUB_REPOSITORY:-ukwhatn/fastapi-template}:develop
    command:
      - /bin/sh
      - -c
      - |
        fastapi run app/main.py --host 0.0.0.0 --port 80 --proxy-headers
    ports:
      - "127.0.0.1:${APP_PORT}:80"
    volumes:
      - ./newrelic.ini:/etc/newrelic.ini:ro
    env_file:
      - .env
    environment:
      - ENV_MODE=staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/system/healthcheck/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
        required: false
    networks:
      - db-stg

  db:
    container_name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-db-stg
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-main}
      TZ: Asia/Tokyo
    volumes:
      - pg_data_stg:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-main}
      interval: 2s
      timeout: 5s
      retries: 30
    networks:
      - db-stg
    profiles:
      - local-db

volumes:
  pg_data_stg:
    name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-pg-data-stg

networks:
  db-stg:
    name: ${COMPOSE_PROJECT_NAME:-fastapi-template}-db-stg
    driver: bridge
